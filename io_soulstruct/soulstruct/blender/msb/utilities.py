from __future__ import annotations

__all__ = [
    "MSB_COLLECTION_RE",
    "BaseMSBEntrySelectOperator",
    "primitive_circle",
    "primitive_sphere",
    "primitive_cylinder",
    "primitive_rect",
    "primitive_cube",
    "primitive_three_axes",
    "create_region_scale_driver",
]

import abc
import re
import shutil
import tempfile
from pathlib import Path

import bpy

from soulstruct.base.maps.msb import MSB, MSBEntry  # must not be imported under `TYPE_CHECKING` guard

from soulstruct.blender.general.cached import get_cached_file
from soulstruct.blender.utilities import *


MSB_COLLECTION_RE = re.compile(r"^(m\d\d_\d\d_\d\d_\d\d) MSB$")


class BaseMSBEntrySelectOperator(LoggingOperator):

    # Set by `invoke` when entry choices are written to temp directory.
    msb: MSB  # NOTE: must NOT be imported under `TYPE_CHECKING` guard, as Blender loads annotations

    temp_directory: bpy.props.StringProperty(
        name="Temp MSB Directory",
        description="Temporary directory containing MSB entry choices",
        default="",
        options={'HIDDEN'},
        subtype="DIR_PATH",
    )

    filter_glob: bpy.props.StringProperty(
        default="*",
        options={'HIDDEN'},
        maxlen=255,  # Max internal buffer length, longer would be clamped.
    )

    filepath: bpy.props.StringProperty(
        name="File Path",
        description="Chosen MSB entry",
        maxlen=1024,
        subtype="FILE_PATH",
    )
    files: bpy.props.CollectionProperty(type=bpy.types.OperatorFileListElement, options={'HIDDEN', 'SKIP_SAVE'})
    directory: bpy.props.StringProperty(options={'HIDDEN'}, subtype="DIR_PATH")

    ENTRY_NAME_RE = re.compile(r"\((\d+)\) (.+)")

    @classmethod
    def get_msb_list_names(cls, context) -> list[str]:
        """Subclass must implement this function to retrieve MSB list names to unpack and offer."""
        raise NotImplementedError("MSB Entry Select operator has not defined `get_msb_list_names()`.")

    @classmethod
    def poll(cls, context) -> bool:
        settings = cls.settings(context)
        try:
            settings.get_import_msb_path()
        except FileNotFoundError:
            return False
        return True

    def cancel(self, context):
        """Make sure we clear the directory even when cancelled."""
        if self.temp_directory:
            shutil.rmtree(self.temp_directory, ignore_errors=True)
            self.temp_directory = ""

    def invoke(self, context, event):
        """Unpack valid MSB entry choices to temp directory for user to select from."""
        if self.temp_directory:
            shutil.rmtree(self.temp_directory, ignore_errors=True)
            self.temp_directory = ""

        settings = self.settings(context)
        # We always use the latest MSB, if the setting is enabled.
        msb_path = settings.get_import_msb_path()  # will automatically use latest MSB version if known and enabled
        self.msb = get_cached_file(msb_path, settings.game_config.msb_class)

        entry_list_names = self.get_msb_list_names(context)
        if not entry_list_names:
            return self.error("No MSB entry list names set to select from.")

        self.temp_directory = tempfile.mkdtemp(suffix="_" + msb_path.stem)
        for entry_list_name in entry_list_names:
            entry_list = getattr(self.msb, entry_list_name)
            entry_list_dir = Path(self.temp_directory, entry_list_name)
            entry_list_dir.mkdir(exist_ok=True)
            for i, entry in enumerate(entry_list):
                # We use the index to ensure unique file names while allowing duplicate entry names (e.g. Regions).
                file_name = f"({i}) {entry.name}"
                file_path = entry_list_dir / file_name
                with file_path.open("w") as f:
                    f.write(entry.name)

        if len(entry_list_names) == 1:
            # Start inside sole subtype.
            self.directory = self.temp_directory + f"/{entry_list_names[0]}"
        else:
            # User chooses subtype directory first.
            self.directory = self.temp_directory
        context.window_manager.fileselect_add(self)
        return {"RUNNING_MODAL"}

    def execute(self, context):
        try:
            entry = self.get_selected_entry()
            if entry:
                self._import_entry(context, entry)
                return {"FINISHED"}
            return {"CANCELLED"}  # relevant error already reported
        finally:
            if self.temp_directory:
                shutil.rmtree(self.temp_directory, ignore_errors=True)
                self.temp_directory = ""

    def get_selected_entry(self) -> MSBEntry | None:
        if not getattr(self, "msb", None):
            self.error("No MSB loaded. Did you cancel the file selection?")
            return None

        path = Path(self.filepath)
        match = self.ENTRY_NAME_RE.match(path.stem)
        if not match:
            self.error(f"Selected file does not match expected format '(i) Name': {self.filepath}")
            return None

        entry_list_name = path.parent.name

        try:
            entry_list = getattr(self.msb, entry_list_name)
        except AttributeError:
            self.error(f"MSB entry list '{entry_list_name}' not found in MSB.")
            return None

        entry_id, entry_name = int(match.group(1)), match.group(2)
        if entry_id >= len(entry_list):
            self.error(
                f"Selected entry ID {entry_id} ('{entry_name}') is out of range for MSB entry list '{entry_list_name}'."
            )
            return None

        return entry_list[entry_id]

    def _import_entry(self, context: Context, entry: MSBEntry):
        """Subclass must implement this function to handle the chosen MSB entry."""
        raise NotImplementedError(f"Operator `{self.__class__.__name__} must implement `_import_entry()`.")


def primitive_circle(mesh: bpy.types.Mesh):
    """Create a primitive 32-point 2D circle."""
    mesh.clear_geometry()
    vertices = [
        (0.0, 1.0, 0.0),
        (-0.19509032368659973, 0.9807852506637573, 0.0),
        (-0.3826834559440613, 0.9238795042037964, 0.0),
        (-0.5555702447891235, 0.8314695954322815, 0.0),
        (-0.7071067690849304, 0.7071067690849304, 0.0),
        (-0.8314695954322815, 0.5555702447891235, 0.0),
        (-0.9238795042037964, 0.3826834559440613, 0.0),
        (-0.9807852506637573, 0.19509032368659973, 0.0),
        (-1.0, 0.0, 0.0),
        (-0.9807852506637573, -0.19509032368659973, 0.0),
        (-0.9238795042037964, -0.3826834559440613, 0.0),
        (-0.8314695954322815, -0.5555702447891235, 0.0),
        (-0.7071067690849304, -0.7071067690849304, 0.0),
        (-0.5555702447891235, -0.8314695954322815, 0.0),
        (-0.3826834559440613, -0.9238795042037964, 0.0),
        (-0.19509032368659973, -0.9807852506637573, 0.0),
        (0.0, -1.0, 0.0),
        (0.19509032368659973, -0.9807852506637573, 0.0),
        (0.3826834559440613, -0.9238795042037964, 0.0),
        (0.5555702447891235, -0.8314695954322815, 0.0),
        (0.7071067690849304, -0.7071067690849304, 0.0),
        (0.8314695954322815, -0.5555702447891235, 0.0),
        (0.9238795042037964, -0.3826834559440613, 0.0),
        (0.9807852506637573, -0.19509032368659973, 0.0),
        (1.0, 0.0, 0.0),
        (0.9807852506637573, 0.19509032368659973, 0.0),
        (0.9238795042037964, 0.3826834559440613, 0.0),
        (0.8314695954322815, 0.5555702447891235, 0.0),
        (0.7071067690849304, 0.7071067690849304, 0.0),
        (0.5555702447891235, 0.8314695954322815, 0.0),
        (0.3826834559440613, 0.9238795042037964, 0.0),
        (0.19509032368659973, 0.9807852506637573, 0.0),
    ]
    edges = [
        (1, 0),
        (2, 1),
        (3, 2),
        (4, 3),
        (5, 4),
        (6, 5),
        (7, 6),
        (8, 7),
        (9, 8),
        (10, 9),
        (11, 10),
        (12, 11),
        (13, 12),
        (14, 13),
        (15, 14),
        (16, 15),
        (17, 16),
        (18, 17),
        (19, 18),
        (20, 19),
        (21, 20),
        (22, 21),
        (23, 22),
        (24, 23),
        (25, 24),
        (26, 25),
        (27, 26),
        (28, 27),
        (29, 28),
        (30, 29),
        (31, 30),
        (0, 31),
    ]
    # No faces.
    mesh.from_pydata(vertices, edges, [])
    mesh.update()


def primitive_sphere(mesh: bpy.types.Mesh):
    """Create a UV sphere mesh with radius 1 (32 theta segments, 16 phi rings) centered at the origin."""
    mesh.clear_geometry()
    vertices = [
        (0.0, 0.5555702447891235, 0.8314695954322815),
        (0.0, 0.8314695954322815, 0.5555702447891235),
        (0.0, 0.9807852506637573, 0.19509032368659973),
        (0.0, 1.0, 0.0),
        (0.0, 0.9807852506637573, -0.19509032368659973),
        (0.0, 0.8314695954322815, -0.5555702447891235),
        (0.03806023299694061, 0.19134171307086945, 0.9807852506637573),
        (0.07465784251689911, 0.3753302991390228, 0.9238795042037964),
        (0.10838638246059418, 0.5448951125144958, 0.8314695954322815),
        (0.13794969022274017, 0.6935198903083801, 0.7071067690849304),
        (0.16221167147159576, 0.815493106842041, 0.5555702447891235),
        (0.1802399456501007, 0.906127393245697, 0.3826834559440613),
        (0.19134171307086945, 0.9619396924972534, 0.19509032368659973),
        (0.19509032368659973, 0.9807852506637573, 0.0),
        (0.19134171307086945, 0.9619396924972534, -0.19509032368659973),
        (0.1802399456501007, 0.906127393245697, -0.3826834559440613),
        (0.16221167147159576, 0.815493106842041, -0.5555702447891235),
        (0.13794969022274017, 0.6935198903083801, -0.7071067690849304),
        (0.10838638246059418, 0.5448951125144958, -0.8314695954322815),
        (0.07465784251689911, 0.3753302991390228, -0.9238795042037964),
        (0.03806023299694061, 0.19134171307086945, -0.9807852506637573),
        (0.07465782761573792, 0.1802399456501007, 0.9807852506637573),
        (0.1464466154575348, 0.3535534143447876, 0.9238795042037964),
        (0.21260753273963928, 0.513279914855957, 0.8314695954322815),
        (0.27059805393218994, 0.6532814502716064, 0.7071067690849304),
        (0.3181896209716797, 0.7681776285171509, 0.5555702447891235),
        (0.3535533547401428, 0.8535533547401428, 0.3826834559440613),
        (0.37533026933670044, 0.906127393245697, 0.19509032368659973),
        (0.3826834261417389, 0.9238794445991516, 0.0),
        (0.37533026933670044, 0.906127393245697, -0.19509032368659973),
        (0.3535533547401428, 0.8535533547401428, -0.3826834559440613),
        (0.3181896209716797, 0.7681776285171509, -0.5555702447891235),
        (0.27059805393218994, 0.6532814502716064, -0.7071067690849304),
        (0.21260753273963928, 0.513279914855957, -0.8314695954322815),
        (0.1464466154575348, 0.3535534143447876, -0.9238795042037964),
        (0.07465782761573792, 0.1802399456501007, -0.9807852506637573),
        (0.10838636755943298, 0.16221165657043457, 0.9807852506637573),
        (0.21260753273963928, 0.3181896507740021, 0.9238795042037964),
        (0.30865827202796936, 0.4619396924972534, 0.8314695954322815),
        (0.39284747838974, 0.5879377722740173, 0.7071067690849304),
        (0.4619396924972534, 0.6913415789604187, 0.5555702447891235),
        (0.513279914855957, 0.7681776881217957, 0.3826834559440613),
        (0.5448951125144958, 0.815493106842041, 0.19509032368659973),
        (0.5555702447891235, 0.8314694762229919, 0.0),
        (0.5448951125144958, 0.815493106842041, -0.19509032368659973),
        (0.513279914855957, 0.7681776881217957, -0.3826834559440613),
        (0.4619396924972534, 0.6913415789604187, -0.5555702447891235),
        (0.39284747838974, 0.5879377722740173, -0.7071067690849304),
        (0.30865827202796936, 0.4619396924972534, -0.8314695954322815),
        (0.21260753273963928, 0.3181896507740021, -0.9238795042037964),
        (0.10838636755943298, 0.16221165657043457, -0.9807852506637573),
        (0.13794967532157898, 0.13794966042041779, 0.9807852506637573),
        (0.27059805393218994, 0.27059802412986755, 0.9238795042037964),
        (0.3928474485874176, 0.3928473889827728, 0.8314695954322815),
        (0.5, 0.5, 0.7071067690849304),
        (0.5879377126693726, 0.5879376530647278, 0.5555702447891235),
        (0.6532813906669617, 0.6532814502716064, 0.3826834559440613),
        (0.6935198903083801, 0.6935198307037354, 0.19509032368659973),
        (0.7071067690849304, 0.7071065902709961, 0.0),
        (0.6935198903083801, 0.6935198307037354, -0.19509032368659973),
        (0.6532813906669617, 0.6532814502716064, -0.3826834559440613),
        (0.5879377126693726, 0.5879376530647278, -0.5555702447891235),
        (0.5, 0.5, -0.7071067690849304),
        (0.3928474485874176, 0.3928473889827728, -0.8314695954322815),
        (0.27059805393218994, 0.27059802412986755, -0.9238795042037964),
        (0.13794967532157898, 0.13794966042041779, -0.9807852506637573),
        (0.16221165657043457, 0.10838635265827179, 0.9807852506637573),
        (0.3181896507740021, 0.2126075029373169, 0.9238795042037964),
        (0.4619397222995758, 0.3086582124233246, 0.8314695954322815),
        (0.5879377722740173, 0.39284747838974, 0.7071067690849304),
        (0.6913416385650635, 0.46193963289260864, 0.5555702447891235),
        (0.7681776285171509, 0.5132799744606018, 0.3826834559440613),
        (0.815493106842041, 0.5448949933052063, 0.19509032368659973),
        (0.8314695358276367, 0.5555700063705444, 0.0),
        (0.815493106842041, 0.5448949933052063, -0.19509032368659973),
        (0.7681776285171509, 0.5132799744606018, -0.3826834559440613),
        (0.6913416385650635, 0.46193963289260864, -0.5555702447891235),
        (0.5879377722740173, 0.39284747838974, -0.7071067690849304),
        (0.4619397222995758, 0.3086582124233246, -0.8314695954322815),
        (0.3181896507740021, 0.2126075029373169, -0.9238795042037964),
        (0.16221165657043457, 0.10838635265827179, -0.9807852506637573),
        (0.0, 0.0, 1.0),
        (0.18023991584777832, 0.07465781271457672, 0.9807852506637573),
        (0.3535533547401428, 0.1464465856552124, 0.9238795042037964),
        (0.513279914855957, 0.2126074582338333, 0.8314695954322815),
        (0.6532814502716064, 0.27059805393218994, 0.7071067690849304),
        (0.7681776285171509, 0.31818950176239014, 0.5555702447891235),
        (0.853553295135498, 0.3535534143447876, 0.3826834559440613),
        (0.9061273336410522, 0.3753301501274109, 0.19509032368659973),
        (0.9238793849945068, 0.3826832175254822, 0.0),
        (0.9061273336410522, 0.3753301501274109, -0.19509032368659973),
        (0.853553295135498, 0.3535534143447876, -0.3826834559440613),
        (0.7681776285171509, 0.31818950176239014, -0.5555702447891235),
        (0.6532814502716064, 0.27059805393218994, -0.7071067690849304),
        (0.513279914855957, 0.2126074582338333, -0.8314695954322815),
        (0.3535533547401428, 0.1464465856552124, -0.9238795042037964),
        (0.18023991584777832, 0.07465781271457672, -0.9807852506637573),
        (0.19134166836738586, 0.03806021437048912, 0.9807852506637573),
        (0.37533023953437805, 0.07465781271457672, 0.9238795042037964),
        (0.5448950529098511, 0.1083863154053688, 0.8314695954322815),
        (0.6935198903083801, 0.13794970512390137, 0.7071067690849304),
        (0.8154929876327515, 0.1622115671634674, 0.5555702447891235),
        (0.9061273336410522, 0.1802399903535843, 0.3826834559440613),
        (0.9619396328926086, 0.1913416087627411, 0.19509032368659973),
        (0.980785071849823, 0.1950901299715042, 0.0),
        (0.9619396328926086, 0.1913416087627411, -0.19509032368659973),
        (0.9061273336410522, 0.1802399903535843, -0.3826834559440613),
        (0.8154929876327515, 0.1622115671634674, -0.5555702447891235),
        (0.6935198903083801, 0.13794970512390137, -0.7071067690849304),
        (0.5448950529098511, 0.1083863154053688, -0.8314695954322815),
        (0.37533023953437805, 0.07465781271457672, -0.9238795042037964),
        (0.19134166836738586, 0.03806021437048912, -0.9807852506637573),
        (0.19509026408195496, -1.1175870895385742e-08, 0.9807852506637573),
        (0.3826833963394165, -2.2351741790771484e-08, 0.9238795042037964),
        (0.555570125579834, -5.21540641784668e-08, 0.8314695954322815),
        (0.7071067094802856, 1.4901161193847656e-08, 0.7071067690849304),
        (0.8314694166183472, -8.940696716308594e-08, 0.5555702447891235),
        (0.9238794445991516, 4.470348358154297e-08, 0.3826834559440613),
        (0.9807851314544678, -8.940696716308594e-08, 0.19509032368659973),
        (0.9999997019767761, -1.6391277313232422e-07, 0.0),
        (0.9807851314544678, -8.940696716308594e-08, -0.19509032368659973),
        (0.9238794445991516, 4.470348358154297e-08, -0.3826834559440613),
        (0.8314694166183472, -8.940696716308594e-08, -0.5555702447891235),
        (0.7071067094802856, 1.4901161193847656e-08, -0.7071067690849304),
        (0.555570125579834, -5.21540641784668e-08, -0.8314695954322815),
        (0.3826833963394165, -2.2351741790771484e-08, -0.9238795042037964),
        (0.19509026408195496, -1.1175870895385742e-08, -0.9807852506637573),
        (0.19134165346622467, -0.03806023299694061, 0.9807852506637573),
        (0.37533023953437805, -0.0746578499674797, 0.9238795042037964),
        (0.5448949933052063, -0.10838640481233597, 0.8314695954322815),
        (0.6935198307037354, -0.13794966042041779, 0.7071067690849304),
        (0.8154929280281067, -0.16221173107624054, 0.5555702447891235),
        (0.9061273336410522, -0.18023990094661713, 0.3826834559440613),
        (0.9619395732879639, -0.19134177267551422, 0.19509032368659973),
        (0.9807848930358887, -0.1950904279947281, 0.0),
        (0.9619395732879639, -0.19134177267551422, -0.19509032368659973),
        (0.9061273336410522, -0.18023990094661713, -0.3826834559440613),
        (0.8154929280281067, -0.16221173107624054, -0.5555702447891235),
        (0.6935198307037354, -0.13794966042041779, -0.7071067690849304),
        (0.5448949933052063, -0.10838640481233597, -0.8314695954322815),
        (0.37533023953437805, -0.0746578499674797, -0.9238795042037964),
        (0.19134165346622467, -0.03806023299694061, -0.9807852506637573),
        (0.18023988604545593, -0.07465782016515732, 0.9807852506637573),
        (0.3535533547401428, -0.1464466154575348, 0.9238795042037964),
        (0.5132797956466675, -0.21260753273963928, 0.8314695954322815),
        (0.6532813906669617, -0.27059799432754517, 0.7071067690849304),
        (0.7681775093078613, -0.3181896507740021, 0.5555702447891235),
        (0.853553295135498, -0.35355329513549805, 0.3826834559440613),
        (0.9061272144317627, -0.3753302991390228, 0.19509032368659973),
        (0.923879086971283, -0.3826834559440613, 0.0),
        (0.9061272144317627, -0.3753302991390228, -0.19509032368659973),
        (0.853553295135498, -0.35355329513549805, -0.3826834559440613),
        (0.7681775093078613, -0.3181896507740021, -0.5555702447891235),
        (0.6532813906669617, -0.27059799432754517, -0.7071067690849304),
        (0.5132797956466675, -0.21260753273963928, -0.8314695954322815),
        (0.3535533547401428, -0.1464466154575348, -0.9238795042037964),
        (0.18023988604545593, -0.07465782016515732, -0.9807852506637573),
        (0.1622115969657898, -0.1083863377571106, 0.9807852506637573),
        (0.3181895911693573, -0.2126075178384781, 0.9238795042037964),
        (0.46193957328796387, -0.308658242225647, 0.8314695954322815),
        (0.5879377126693726, -0.3928474187850952, 0.7071067690849304),
        (0.6913414597511292, -0.4619396924972534, 0.5555702447891235),
        (0.7681776285171509, -0.5132798552513123, 0.3826834559440613),
        (0.8154929280281067, -0.5448950529098511, 0.19509032368659973),
        (0.8314691185951233, -0.5555701851844788, 0.0),
        (0.8154929280281067, -0.5448950529098511, -0.19509032368659973),
        (0.7681776285171509, -0.5132798552513123, -0.3826834559440613),
        (0.6913414597511292, -0.4619396924972534, -0.5555702447891235),
        (0.5879377126693726, -0.3928474187850952, -0.7071067690849304),
        (0.46193957328796387, -0.308658242225647, -0.8314695954322815),
        (0.3181895911693573, -0.2126075178384781, -0.9238795042037964),
        (0.1622115969657898, -0.1083863377571106, -0.9807852506637573),
        (0.1379496157169342, -0.1379496306180954, 0.9807852506637573),
        (0.2705979645252228, -0.27059802412986755, 0.9238795042037964),
        (0.3928472697734833, -0.3928474187850952, 0.8314695954322815),
        (0.4999999403953552, -0.4999999403953552, 0.7071067690849304),
        (0.5879375338554382, -0.5879376530647278, 0.5555702447891235),
        (0.6532813906669617, -0.6532813310623169, 0.3826834559440613),
        (0.6935197114944458, -0.6935198307037354, 0.19509032368659973),
        (0.7071062326431274, -0.7071066498756409, 0.0),
        (0.6935197114944458, -0.6935198307037354, -0.19509032368659973),
        (0.6532813906669617, -0.6532813310623169, -0.3826834559440613),
        (0.5879375338554382, -0.5879376530647278, -0.5555702447891235),
        (0.4999999403953552, -0.4999999403953552, -0.7071067690849304),
        (0.3928472697734833, -0.3928474187850952, -0.8314695954322815),
        (0.2705979645252228, -0.27059802412986755, -0.9238795042037964),
        (0.1379496157169342, -0.1379496306180954, -0.9807852506637573),
        (0.1083863154053688, -0.1622115969657898, 0.9807852506637573),
        (0.21260744333267212, -0.3181896209716797, 0.9238795042037964),
        (0.30865809321403503, -0.46193966269493103, 0.8314695954322815),
        (0.3928474187850952, -0.5879377126693726, 0.7071067690849304),
        (0.4619395434856415, -0.6913415193557739, 0.5555702447891235),
        (0.513279914855957, -0.7681775689125061, 0.3826834559440613),
        (0.5448948740959167, -0.8154929876327515, 0.19509032368659973),
        (0.5555697083473206, -0.8314693570137024, 0.0),
        (0.5448948740959167, -0.8154929876327515, -0.19509032368659973),
        (0.513279914855957, -0.7681775689125061, -0.3826834559440613),
        (0.4619395434856415, -0.6913415193557739, -0.5555702447891235),
        (0.3928474187850952, -0.5879377126693726, -0.7071067690849304),
        (0.30865809321403503, -0.46193966269493103, -0.8314695954322815),
        (0.21260744333267212, -0.3181896209716797, -0.9238795042037964),
        (0.1083863154053688, -0.1622115969657898, -0.9807852506637573),
        (0.07465778291225433, -0.18023985624313354, 0.9807852506637573),
        (0.14644652605056763, -0.35355332493782043, 0.9238795042037964),
        (0.21260735392570496, -0.5132797956466675, 0.8314695954322815),
        (0.27059799432754517, -0.6532813906669617, 0.7071067690849304),
        (0.31818944215774536, -0.7681775093078613, 0.5555702447891235),
        (0.3535533547401428, -0.8535531759262085, 0.3826834559440613),
        (0.37533003091812134, -0.9061272144317627, 0.19509032368659973),
        (0.3826829493045807, -0.9238791465759277, 0.0),
        (0.37533003091812134, -0.9061272144317627, -0.19509032368659973),
        (0.3535533547401428, -0.8535531759262085, -0.3826834559440613),
        (0.31818944215774536, -0.7681775093078613, -0.5555702447891235),
        (0.27059799432754517, -0.6532813906669617, -0.7071067690849304),
        (0.21260735392570496, -0.5132797956466675, -0.8314695954322815),
        (0.14644652605056763, -0.35355332493782043, -0.9238795042037964),
        (0.07465778291225433, -0.18023985624313354, -0.9807852506637573),
        (0.038060203194618225, -0.1913415938615799, 0.9807852506637573),
        (0.07465776056051254, -0.3753301799297333, 0.9238795042037964),
        (0.10838623344898224, -0.5448948740959167, 0.8314695954322815),
        (0.13794966042041779, -0.6935198307037354, 0.7071067690849304),
        (0.16221152245998383, -0.8154928684234619, 0.5555702447891235),
        (0.1802399456501007, -0.9061272144317627, 0.3826834559440613),
        (0.19134151935577393, -0.9619394540786743, 0.19509032368659973),
        (0.1950899064540863, -0.9807847738265991, 0.0),
        (0.19134151935577393, -0.9619394540786743, -0.19509032368659973),
        (0.1802399456501007, -0.9061272144317627, -0.3826834559440613),
        (0.16221152245998383, -0.8154928684234619, -0.5555702447891235),
        (0.13794966042041779, -0.6935198307037354, -0.7071067690849304),
        (0.10838623344898224, -0.5448948740959167, -0.8314695954322815),
        (0.07465776056051254, -0.3753301799297333, -0.9238795042037964),
        (0.038060203194618225, -0.1913415938615799, -0.9807852506637573),
        (-7.450580596923828e-09, -0.195090189576149, 0.9807852506637573),
        (-5.21540641784668e-08, -0.38268333673477173, 0.9238795042037964),
        (-9.685754776000977e-08, -0.5555699467658997, 0.8314695954322815),
        (-1.4901161193847656e-08, -0.7071066498756409, 0.7071067690849304),
        (-1.043081283569336e-07, -0.8314692974090576, 0.5555702447891235),
        (2.9802322387695312e-08, -0.9238792657852173, 0.3826834559440613),
        (-1.341104507446289e-07, -0.9807849526405334, 0.19509032368659973),
        (-3.2782554626464844e-07, -0.9999993443489075, 0.0),
        (-1.341104507446289e-07, -0.9807849526405334, -0.19509032368659973),
        (2.9802322387695312e-08, -0.9238792657852173, -0.3826834559440613),
        (-1.043081283569336e-07, -0.8314692974090576, -0.5555702447891235),
        (-1.4901161193847656e-08, -0.7071066498756409, -0.7071067690849304),
        (-9.685754776000977e-08, -0.5555699467658997, -0.8314695954322815),
        (-5.21540641784668e-08, -0.38268333673477173, -0.9238795042037964),
        (-7.450580596923828e-09, -0.195090189576149, -0.9807852506637573),
        (-0.03806021437048912, -0.1913415789604187, 0.9807852506637573),
        (-0.0746578648686409, -0.3753301799297333, 0.9238795042037964),
        (-0.10838641971349716, -0.544894814491272, 0.8314695954322815),
        (-0.13794967532157898, -0.6935197710990906, 0.7071067690849304),
        (-0.16221171617507935, -0.8154928088188171, 0.5555702447891235),
        (-0.18023987114429474, -0.9061271548271179, 0.3826834559440613),
        (-0.19134178757667542, -0.9619393944740295, 0.19509032368659973),
        (-0.19509051740169525, -0.98078453540802, 0.0),
        (-0.19134178757667542, -0.9619393944740295, -0.19509032368659973),
        (-0.18023987114429474, -0.9061271548271179, -0.3826834559440613),
        (-0.16221171617507935, -0.8154928088188171, -0.5555702447891235),
        (-0.13794967532157898, -0.6935197710990906, -0.7071067690849304),
        (-0.10838641971349716, -0.544894814491272, -0.8314695954322815),
        (-0.0746578648686409, -0.3753301799297333, -0.9238795042037964),
        (-0.03806021437048912, -0.1913415789604187, -0.9807852506637573),
        (-0.07465778291225433, -0.18023982644081116, 0.9807852506637573),
        (-0.1464466154575348, -0.35355329513549805, 0.9238795042037964),
        (-0.2126075029373169, -0.5132796168327332, 0.8314695954322815),
        (-0.27059799432754517, -0.6532813310623169, 0.7071067690849304),
        (-0.3181896209716797, -0.7681773900985718, 0.5555702447891235),
        (-0.35355323553085327, -0.8535531163215637, 0.3826834559440613),
        (-0.37533026933670044, -0.9061270356178284, 0.19509032368659973),
        (-0.38268348574638367, -0.9238787293434143, 0.0),
        (-0.37533026933670044, -0.9061270356178284, -0.19509032368659973),
        (-0.35355323553085327, -0.8535531163215637, -0.3826834559440613),
        (-0.3181896209716797, -0.7681773900985718, -0.5555702447891235),
        (-0.27059799432754517, -0.6532813310623169, -0.7071067690849304),
        (-0.2126075029373169, -0.5132796168327332, -0.8314695954322815),
        (-0.1464466154575348, -0.35355329513549805, -0.9238795042037964),
        (-0.07465778291225433, -0.18023982644081116, -0.9807852506637573),
        (-0.10838630050420761, -0.1622115522623062, 0.9807852506637573),
        (-0.2126075029373169, -0.3181895315647125, 0.9238795042037964),
        (-0.3086581826210022, -0.46193939447402954, 0.8314695954322815),
        (-0.3928474187850952, -0.5879376530647278, 0.7071067690849304),
        (-0.46193963289260864, -0.6913413405418396, 0.5555702447891235),
        (-0.5132797360420227, -0.7681775093078613, 0.3826834559440613),
        (-0.5448950529098511, -0.8154927492141724, 0.19509032368659973),
        (-0.555570125579834, -0.8314687609672546, 0.0),
        (-0.5448950529098511, -0.8154927492141724, -0.19509032368659973),
        (-0.5132797360420227, -0.7681775093078613, -0.3826834559440613),
        (-0.46193963289260864, -0.6913413405418396, -0.5555702447891235),
        (-0.3928474187850952, -0.5879376530647278, -0.7071067690849304),
        (-0.3086581826210022, -0.46193939447402954, -0.8314695954322815),
        (-0.2126075029373169, -0.3181895315647125, -0.9238795042037964),
        (-0.10838630050420761, -0.1622115522623062, -0.9807852506637573),
        (-0.13794958591461182, -0.13794957101345062, 0.9807852506637573),
        (-0.27059799432754517, -0.2705979347229004, 0.9238795042037964),
        (-0.39284729957580566, -0.39284712076187134, 0.8314695954322815),
        (-0.49999991059303284, -0.49999988079071045, 0.7071067690849304),
        (-0.587937593460083, -0.5879374146461487, 0.5555702447891235),
        (-0.6532812118530273, -0.6532812714576721, 0.3826834559440613),
        (-0.6935197710990906, -0.6935195326805115, 0.19509032368659973),
        (-0.7071064710617065, -0.7071059346199036, 0.0),
        (-0.6935197710990906, -0.6935195326805115, -0.19509032368659973),
        (-0.6532812118530273, -0.6532812714576721, -0.3826834559440613),
        (-0.587937593460083, -0.5879374146461487, -0.5555702447891235),
        (-0.49999991059303284, -0.49999988079071045, -0.7071067690849304),
        (-0.39284729957580566, -0.39284712076187134, -0.8314695954322815),
        (-0.27059799432754517, -0.2705979347229004, -0.9238795042037964),
        (-0.13794958591461182, -0.13794957101345062, -0.9807852506637573),
        (0.0, 0.0, -1.0),
        (-0.1622115522623062, -0.10838627815246582, 0.9807852506637573),
        (-0.3181895613670349, -0.21260741353034973, 0.9238795042037964),
        (-0.4619395136833191, -0.3086579442024231, 0.8314695954322815),
        (-0.5879376530647278, -0.39284735918045044, 0.7071067690849304),
        (-0.6913414597511292, -0.46193942427635193, 0.5555702447891235),
        (-0.7681774497032166, -0.5132797956466675, 0.3826834559440613),
        (-0.8154929280281067, -0.5448946952819824, 0.19509032368659973),
        (-0.8314691185951233, -0.5555694103240967, 0.0),
        (-0.8154929280281067, -0.5448946952819824, -0.19509032368659973),
        (-0.7681774497032166, -0.5132797956466675, -0.3826834559440613),
        (-0.6913414597511292, -0.46193942427635193, -0.5555702447891235),
        (-0.5879376530647278, -0.39284735918045044, -0.7071067690849304),
        (-0.4619395136833191, -0.3086579442024231, -0.8314695954322815),
        (-0.3181895613670349, -0.21260741353034973, -0.9238795042037964),
        (-0.1622115522623062, -0.10838627815246582, -0.9807852506637573),
        (-0.18023981153964996, -0.07465775310993195, 0.9807852506637573),
        (-0.35355326533317566, -0.14644651114940643, 0.9238795042037964),
        (-0.5132796168327332, -0.2126072347164154, 0.8314695954322815),
        (-0.6532813310623169, -0.2705979645252228, 0.7071067690849304),
        (-0.7681773900985718, -0.3181893229484558, 0.5555702447891235),
        (-0.853553056716919, -0.35355326533317566, 0.3826834559440613),
        (-0.9061271548271179, -0.3753298819065094, 0.19509032368659973),
        (-0.9238788485527039, -0.3826826810836792, 0.0),
        (-0.9061271548271179, -0.3753298819065094, -0.19509032368659973),
        (-0.853553056716919, -0.35355326533317566, -0.3826834559440613),
        (-0.7681773900985718, -0.3181893229484558, -0.5555702447891235),
        (-0.6532813310623169, -0.2705979645252228, -0.7071067690849304),
        (-0.5132796168327332, -0.2126072347164154, -0.8314695954322815),
        (-0.35355326533317566, -0.14644651114940643, -0.9238795042037964),
        (-0.18023981153964996, -0.07465775310993195, -0.9807852506637573),
        (-0.1913415491580963, -0.038060180842876434, 0.9807852506637573),
        (-0.3753301203250885, -0.07465775310993195, 0.9238795042037964),
        (-0.5448946952819824, -0.10838615149259567, 0.8314695954322815),
        (-0.6935197710990906, -0.1379496306180954, 0.7071067690849304),
        (-0.8154927492141724, -0.16221143305301666, 0.5555702447891235),
        (-0.9061270952224731, -0.18023988604545593, 0.3826834559440613),
        (-0.9619393944740295, -0.19134138524532318, 0.19509032368659973),
        (-0.9807844161987305, -0.1950896978378296, 0.0),
        (-0.9619393944740295, -0.19134138524532318, -0.19509032368659973),
        (-0.9061270952224731, -0.18023988604545593, -0.3826834559440613),
        (-0.8154927492141724, -0.16221143305301666, -0.5555702447891235),
        (-0.6935197710990906, -0.1379496306180954, -0.7071067690849304),
        (-0.5448946952819824, -0.10838615149259567, -0.8314695954322815),
        (-0.3753301203250885, -0.07465775310993195, -0.9238795042037964),
        (-0.1913415491580963, -0.038060180842876434, -0.9807852506637573),
        (-0.1950901448726654, 1.862645149230957e-08, 0.9807852506637573),
        (-0.38268324732780457, 5.21540641784668e-08, 0.9238795042037964),
        (-0.5555697679519653, 1.4901161193847656e-07, 0.8314695954322815),
        (-0.7071065902709961, 2.9802322387695312e-08, 0.7071067690849304),
        (-0.8314691781997681, 1.6391277313232422e-07, 0.5555702447891235),
        (-0.9238791465759277, 1.4901161193847656e-08, 0.3826834559440613),
        (-0.9807848334312439, 2.682209014892578e-07, 0.19509032368659973),
        (-0.9999990463256836, 4.470348358154297e-07, 0.0),
        (-0.9807848334312439, 2.682209014892578e-07, -0.19509032368659973),
        (-0.9238791465759277, 1.4901161193847656e-08, -0.3826834559440613),
        (-0.8314691781997681, 1.6391277313232422e-07, -0.5555702447891235),
        (-0.7071065902709961, 2.9802322387695312e-08, -0.7071067690849304),
        (-0.5555697679519653, 1.4901161193847656e-07, -0.8314695954322815),
        (-0.38268324732780457, 5.21540641784668e-08, -0.9238795042037964),
        (-0.1950901448726654, 1.862645149230957e-08, -0.9807852506637573),
        (-0.19134153425693512, 0.03806021809577942, 0.9807852506637573),
        (-0.3753300905227661, 0.0746578499674797, 0.9238795042037964),
        (-0.5448946356773376, 0.10838643461465836, 0.8314695954322815),
        (-0.6935197114944458, 0.13794969022274017, 0.7071067690849304),
        (-0.8154926300048828, 0.16221176087856293, 0.5555702447891235),
        (-0.9061270356178284, 0.18023990094661713, 0.3826834559440613),
        (-0.9619392156600952, 0.19134189188480377, 0.19509032368659973),
        (-0.9807842373847961, 0.19509057700634003, 0.0),
        (-0.9619392156600952, 0.19134189188480377, -0.19509032368659973),
        (-0.9061270356178284, 0.18023990094661713, -0.3826834559440613),
        (-0.8154926300048828, 0.16221176087856293, -0.5555702447891235),
        (-0.6935197114944458, 0.13794969022274017, -0.7071067690849304),
        (-0.5448946356773376, 0.10838643461465836, -0.8314695954322815),
        (-0.3753300905227661, 0.0746578499674797, -0.9238795042037964),
        (-0.19134153425693512, 0.03806021809577942, -0.9807852506637573),
        (-0.18023978173732758, 0.07465778291225433, 0.9807852506637573),
        (-0.3535532057285309, 0.1464465856552124, 0.9238795042037964),
        (-0.5132794380187988, 0.2126074880361557, 0.8314695954322815),
        (-0.6532812714576721, 0.27059799432754517, 0.7071067690849304),
        (-0.7681772112846375, 0.3181896209716797, 0.5555702447891235),
        (-0.8535529971122742, 0.35355323553085327, 0.3826834559440613),
        (-0.906126856803894, 0.3753303289413452, 0.19509032368659973),
        (-0.9238784313201904, 0.38268348574638367, 0.0),
        (-0.906126856803894, 0.3753303289413452, -0.19509032368659973),
        (-0.8535529971122742, 0.35355323553085327, -0.3826834559440613),
        (-0.7681772112846375, 0.3181896209716797, -0.5555702447891235),
        (-0.6532812714576721, 0.27059799432754517, -0.7071067690849304),
        (-0.5132794380187988, 0.2126074880361557, -0.8314695954322815),
        (-0.3535532057285309, 0.1464465856552124, -0.9238795042037964),
        (-0.18023978173732758, 0.07465778291225433, -0.9807852506637573),
        (-0.16221150755882263, 0.10838629305362701, 0.9807852506637573),
        (-0.31818944215774536, 0.2126074582338333, 0.9238795042037964),
        (-0.4619392156600952, 0.3086581528186798, 0.8314695954322815),
        (-0.587937593460083, 0.3928473889827728, 0.7071067690849304),
        (-0.6913411617279053, 0.46193963289260864, 0.5555702447891235),
        (-0.7681773900985718, 0.5132797360420227, 0.3826834559440613),
        (-0.815492570400238, 0.5448950529098511, 0.19509032368659973),
        (-0.8314684629440308, 0.5555700659751892, 0.0),
        (-0.815492570400238, 0.5448950529098511, -0.19509032368659973),
        (-0.7681773900985718, 0.5132797360420227, -0.3826834559440613),
        (-0.6913411617279053, 0.46193963289260864, -0.5555702447891235),
        (-0.587937593460083, 0.3928473889827728, -0.7071067690849304),
        (-0.4619392156600952, 0.3086581528186798, -0.8314695954322815),
        (-0.31818944215774536, 0.2126074582338333, -0.9238795042037964),
        (-0.16221150755882263, 0.10838629305362701, -0.9807852506637573),
        (-0.13794954121112823, 0.13794957101345062, 0.9807852506637573),
        (-0.2705978751182556, 0.2705979347229004, 0.9238795042037964),
        (-0.392846941947937, 0.3928472399711609, 0.8314695954322815),
        (-0.4999998211860657, 0.49999988079071045, 0.7071067690849304),
        (-0.5879372358322144, 0.5879375338554382, 0.5555702447891235),
        (-0.6532811522483826, 0.6532811522483826, 0.3826834559440613),
        (-0.6935193538665771, 0.6935197114944458, 0.19509032368659973),
        (-0.7071056962013245, 0.707106351852417, 0.0),
        (-0.6935193538665771, 0.6935197114944458, -0.19509032368659973),
        (-0.6532811522483826, 0.6532811522483826, -0.3826834559440613),
        (-0.5879372358322144, 0.5879375338554382, -0.5555702447891235),
        (-0.4999998211860657, 0.49999988079071045, -0.7071067690849304),
        (-0.392846941947937, 0.3928472399711609, -0.8314695954322815),
        (-0.2705978751182556, 0.2705979347229004, -0.9238795042037964),
        (-0.13794954121112823, 0.13794957101345062, -0.9807852506637573),
        (-0.10838624835014343, 0.16221152245998383, 0.9807852506637573),
        (-0.21260736882686615, 0.31818950176239014, 0.9238795042037964),
        (-0.30865779519081116, 0.46193942427635193, 0.8314695954322815),
        (-0.39284729957580566, 0.5879376530647278, 0.7071067690849304),
        (-0.46193927526474, 0.6913413405418396, 0.5555702447891235),
        (-0.5132796764373779, 0.7681773900985718, 0.3826834559440613),
        (-0.5448945760726929, 0.8154928088188171, 0.19509032368659973),
        (-0.5555692315101624, 0.831468939781189, 0.0),
        (-0.5448945760726929, 0.8154928088188171, -0.19509032368659973),
        (-0.5132796764373779, 0.7681773900985718, -0.3826834559440613),
        (-0.46193927526474, 0.6913413405418396, -0.5555702447891235),
        (-0.39284729957580566, 0.5879376530647278, -0.7071067690849304),
        (-0.30865779519081116, 0.46193942427635193, -0.8314695954322815),
        (-0.21260736882686615, 0.31818950176239014, -0.9238795042037964),
        (-0.10838624835014343, 0.16221152245998383, -0.9807852506637573),
        (-0.07465773820877075, 0.18023976683616638, 0.9807852506637573),
        (-0.14644648134708405, 0.35355323553085327, 0.9238795042037964),
        (-0.21260710060596466, 0.5132794976234436, 0.8314695954322815),
        (-0.270597904920578, 0.6532813310623169, 0.7071067690849304),
        (-0.31818920373916626, 0.7681772708892822, 0.5555702447891235),
        (-0.3535531759262085, 0.8535529971122742, 0.3826834559440613),
        (-0.37532979249954224, 0.9061269760131836, 0.19509032368659973),
        (-0.38268256187438965, 0.9238786101341248, 0.0),
        (-0.37532979249954224, 0.9061269760131836, -0.19509032368659973),
        (-0.3535531759262085, 0.8535529971122742, -0.3826834559440613),
        (-0.31818920373916626, 0.7681772708892822, -0.5555702447891235),
        (-0.270597904920578, 0.6532813310623169, -0.7071067690849304),
        (-0.21260710060596466, 0.5132794976234436, -0.8314695954322815),
        (-0.14644648134708405, 0.35355323553085327, -0.9238795042037964),
        (-0.07465773820877075, 0.18023976683616638, -0.9807852506637573),
        (-0.038060177117586136, 0.19134150445461273, 0.9807852506637573),
        (-0.07465773075819016, 0.3753300905227661, 0.9238795042037964),
        (-0.10838603973388672, 0.5448945164680481, 0.8314695954322815),
        (-0.13794957101345062, 0.6935197710990906, 0.7071067690849304),
        (-0.1622113287448883, 0.815492570400238, 0.5555702447891235),
        (-0.18023981153964996, 0.9061269760131836, 0.3826834559440613),
        (-0.1913413256406784, 0.9619392156600952, 0.19509032368659973),
        (-0.19508962333202362, 0.9807841777801514, 0.0),
        (-0.1913413256406784, 0.9619392156600952, -0.19509032368659973),
        (-0.18023981153964996, 0.9061269760131836, -0.3826834559440613),
        (-0.1622113287448883, 0.815492570400238, -0.5555702447891235),
        (-0.13794957101345062, 0.6935197710990906, -0.7071067690849304),
        (-0.10838603973388672, 0.5448945164680481, -0.8314695954322815),
        (-0.07465773075819016, 0.3753300905227661, -0.9238795042037964),
        (-0.038060177117586136, 0.19134150445461273, -0.9807852506637573),
        (1.4901161193847656e-08, 0.19509010016918182, 0.9807852506637573),
        (6.705522537231445e-08, 0.3826832175254822, 0.9238795042037964),
        (8.940696716308594e-08, 0.7071065902709961, 0.7071067690849304),
        (5.960464477539063e-08, 0.9238790273666382, 0.3826834559440613),
        (5.960464477539063e-08, 0.9238790273666382, -0.3826834559440613),
        (8.940696716308594e-08, 0.7071065902709961, -0.7071067690849304),
        (2.1606683731079102e-07, 0.5555695295333862, -0.8314695954322815),
        (6.705522537231445e-08, 0.3826832175254822, -0.9238795042037964),
        (1.4901161193847656e-08, 0.19509010016918182, -0.9807852506637573),
    ]
    faces = [
        (477, 4, 14, 15),
        (0, 474, 7, 8),
        (5, 477, 15, 16),
        (475, 0, 8, 9),
        (478, 5, 16, 17),
        (1, 475, 9, 10),
        (479, 478, 17, 18),
        (476, 1, 10, 11),
        (480, 479, 18, 19),
        (2, 476, 11, 12),
        (481, 480, 19, 20),
        (3, 2, 12, 13),
        (473, 81, 6),
        (307, 481, 20),
        (4, 3, 13, 14),
        (474, 473, 6, 7),
        (14, 13, 28, 29),
        (7, 6, 21, 22),
        (15, 14, 29, 30),
        (8, 7, 22, 23),
        (16, 15, 30, 31),
        (9, 8, 23, 24),
        (17, 16, 31, 32),
        (10, 9, 24, 25),
        (18, 17, 32, 33),
        (11, 10, 25, 26),
        (19, 18, 33, 34),
        (12, 11, 26, 27),
        (20, 19, 34, 35),
        (13, 12, 27, 28),
        (6, 81, 21),
        (307, 20, 35),
        (33, 32, 47, 48),
        (26, 25, 40, 41),
        (34, 33, 48, 49),
        (27, 26, 41, 42),
        (35, 34, 49, 50),
        (28, 27, 42, 43),
        (21, 81, 36),
        (307, 35, 50),
        (29, 28, 43, 44),
        (22, 21, 36, 37),
        (30, 29, 44, 45),
        (23, 22, 37, 38),
        (31, 30, 45, 46),
        (24, 23, 38, 39),
        (32, 31, 46, 47),
        (25, 24, 39, 40),
        (37, 36, 51, 52),
        (45, 44, 59, 60),
        (38, 37, 52, 53),
        (46, 45, 60, 61),
        (39, 38, 53, 54),
        (47, 46, 61, 62),
        (40, 39, 54, 55),
        (48, 47, 62, 63),
        (41, 40, 55, 56),
        (49, 48, 63, 64),
        (42, 41, 56, 57),
        (50, 49, 64, 65),
        (43, 42, 57, 58),
        (36, 81, 51),
        (307, 50, 65),
        (44, 43, 58, 59),
        (56, 55, 70, 71),
        (64, 63, 78, 79),
        (57, 56, 71, 72),
        (65, 64, 79, 80),
        (58, 57, 72, 73),
        (51, 81, 66),
        (307, 65, 80),
        (59, 58, 73, 74),
        (52, 51, 66, 67),
        (60, 59, 74, 75),
        (53, 52, 67, 68),
        (61, 60, 75, 76),
        (54, 53, 68, 69),
        (62, 61, 76, 77),
        (55, 54, 69, 70),
        (63, 62, 77, 78),
        (75, 74, 90, 91),
        (68, 67, 83, 84),
        (76, 75, 91, 92),
        (69, 68, 84, 85),
        (77, 76, 92, 93),
        (70, 69, 85, 86),
        (78, 77, 93, 94),
        (71, 70, 86, 87),
        (79, 78, 94, 95),
        (72, 71, 87, 88),
        (80, 79, 95, 96),
        (73, 72, 88, 89),
        (66, 81, 82),
        (307, 80, 96),
        (74, 73, 89, 90),
        (67, 66, 82, 83),
        (95, 94, 109, 110),
        (88, 87, 102, 103),
        (96, 95, 110, 111),
        (89, 88, 103, 104),
        (82, 81, 97),
        (307, 96, 111),
        (90, 89, 104, 105),
        (83, 82, 97, 98),
        (91, 90, 105, 106),
        (84, 83, 98, 99),
        (92, 91, 106, 107),
        (85, 84, 99, 100),
        (93, 92, 107, 108),
        (86, 85, 100, 101),
        (94, 93, 108, 109),
        (87, 86, 101, 102),
        (107, 106, 121, 122),
        (100, 99, 114, 115),
        (108, 107, 122, 123),
        (101, 100, 115, 116),
        (109, 108, 123, 124),
        (102, 101, 116, 117),
        (110, 109, 124, 125),
        (103, 102, 117, 118),
        (111, 110, 125, 126),
        (104, 103, 118, 119),
        (97, 81, 112),
        (307, 111, 126),
        (105, 104, 119, 120),
        (98, 97, 112, 113),
        (106, 105, 120, 121),
        (99, 98, 113, 114),
        (126, 125, 140, 141),
        (119, 118, 133, 134),
        (112, 81, 127),
        (307, 126, 141),
        (120, 119, 134, 135),
        (113, 112, 127, 128),
        (121, 120, 135, 136),
        (114, 113, 128, 129),
        (122, 121, 136, 137),
        (115, 114, 129, 130),
        (123, 122, 137, 138),
        (116, 115, 130, 131),
        (124, 123, 138, 139),
        (117, 116, 131, 132),
        (125, 124, 139, 140),
        (118, 117, 132, 133),
        (130, 129, 144, 145),
        (138, 137, 152, 153),
        (131, 130, 145, 146),
        (139, 138, 153, 154),
        (132, 131, 146, 147),
        (140, 139, 154, 155),
        (133, 132, 147, 148),
        (141, 140, 155, 156),
        (134, 133, 148, 149),
        (127, 81, 142),
        (307, 141, 156),
        (135, 134, 149, 150),
        (128, 127, 142, 143),
        (136, 135, 150, 151),
        (129, 128, 143, 144),
        (137, 136, 151, 152),
        (149, 148, 163, 164),
        (142, 81, 157),
        (307, 156, 171),
        (150, 149, 164, 165),
        (143, 142, 157, 158),
        (151, 150, 165, 166),
        (144, 143, 158, 159),
        (152, 151, 166, 167),
        (145, 144, 159, 160),
        (153, 152, 167, 168),
        (146, 145, 160, 161),
        (154, 153, 168, 169),
        (147, 146, 161, 162),
        (155, 154, 169, 170),
        (148, 147, 162, 163),
        (156, 155, 170, 171),
        (168, 167, 182, 183),
        (161, 160, 175, 176),
        (169, 168, 183, 184),
        (162, 161, 176, 177),
        (170, 169, 184, 185),
        (163, 162, 177, 178),
        (171, 170, 185, 186),
        (164, 163, 178, 179),
        (157, 81, 172),
        (307, 171, 186),
        (165, 164, 179, 180),
        (158, 157, 172, 173),
        (166, 165, 180, 181),
        (159, 158, 173, 174),
        (167, 166, 181, 182),
        (160, 159, 174, 175),
        (172, 81, 187),
        (307, 186, 201),
        (180, 179, 194, 195),
        (173, 172, 187, 188),
        (181, 180, 195, 196),
        (174, 173, 188, 189),
        (182, 181, 196, 197),
        (175, 174, 189, 190),
        (183, 182, 197, 198),
        (176, 175, 190, 191),
        (184, 183, 198, 199),
        (177, 176, 191, 192),
        (185, 184, 199, 200),
        (178, 177, 192, 193),
        (186, 185, 200, 201),
        (179, 178, 193, 194),
        (191, 190, 205, 206),
        (199, 198, 213, 214),
        (192, 191, 206, 207),
        (200, 199, 214, 215),
        (193, 192, 207, 208),
        (201, 200, 215, 216),
        (194, 193, 208, 209),
        (187, 81, 202),
        (307, 201, 216),
        (195, 194, 209, 210),
        (188, 187, 202, 203),
        (196, 195, 210, 211),
        (189, 188, 203, 204),
        (197, 196, 211, 212),
        (190, 189, 204, 205),
        (198, 197, 212, 213),
        (210, 209, 224, 225),
        (203, 202, 217, 218),
        (211, 210, 225, 226),
        (204, 203, 218, 219),
        (212, 211, 226, 227),
        (205, 204, 219, 220),
        (213, 212, 227, 228),
        (206, 205, 220, 221),
        (214, 213, 228, 229),
        (207, 206, 221, 222),
        (215, 214, 229, 230),
        (208, 207, 222, 223),
        (216, 215, 230, 231),
        (209, 208, 223, 224),
        (202, 81, 217),
        (307, 216, 231),
        (229, 228, 243, 244),
        (222, 221, 236, 237),
        (230, 229, 244, 245),
        (223, 222, 237, 238),
        (231, 230, 245, 246),
        (224, 223, 238, 239),
        (217, 81, 232),
        (307, 231, 246),
        (225, 224, 239, 240),
        (218, 217, 232, 233),
        (226, 225, 240, 241),
        (219, 218, 233, 234),
        (227, 226, 241, 242),
        (220, 219, 234, 235),
        (228, 227, 242, 243),
        (221, 220, 235, 236),
        (241, 240, 255, 256),
        (234, 233, 248, 249),
        (242, 241, 256, 257),
        (235, 234, 249, 250),
        (243, 242, 257, 258),
        (236, 235, 250, 251),
        (244, 243, 258, 259),
        (237, 236, 251, 252),
        (245, 244, 259, 260),
        (238, 237, 252, 253),
        (246, 245, 260, 261),
        (239, 238, 253, 254),
        (232, 81, 247),
        (307, 246, 261),
        (240, 239, 254, 255),
        (233, 232, 247, 248),
        (260, 259, 274, 275),
        (253, 252, 267, 268),
        (261, 260, 275, 276),
        (254, 253, 268, 269),
        (247, 81, 262),
        (307, 261, 276),
        (255, 254, 269, 270),
        (248, 247, 262, 263),
        (256, 255, 270, 271),
        (249, 248, 263, 264),
        (257, 256, 271, 272),
        (250, 249, 264, 265),
        (258, 257, 272, 273),
        (251, 250, 265, 266),
        (259, 258, 273, 274),
        (252, 251, 266, 267),
        (264, 263, 278, 279),
        (272, 271, 286, 287),
        (265, 264, 279, 280),
        (273, 272, 287, 288),
        (266, 265, 280, 281),
        (274, 273, 288, 289),
        (267, 266, 281, 282),
        (275, 274, 289, 290),
        (268, 267, 282, 283),
        (276, 275, 290, 291),
        (269, 268, 283, 284),
        (262, 81, 277),
        (307, 276, 291),
        (270, 269, 284, 285),
        (263, 262, 277, 278),
        (271, 270, 285, 286),
        (283, 282, 297, 298),
        (291, 290, 305, 306),
        (284, 283, 298, 299),
        (277, 81, 292),
        (307, 291, 306),
        (285, 284, 299, 300),
        (278, 277, 292, 293),
        (286, 285, 300, 301),
        (279, 278, 293, 294),
        (287, 286, 301, 302),
        (280, 279, 294, 295),
        (288, 287, 302, 303),
        (281, 280, 295, 296),
        (289, 288, 303, 304),
        (282, 281, 296, 297),
        (290, 289, 304, 305),
        (302, 301, 317, 318),
        (295, 294, 310, 311),
        (303, 302, 318, 319),
        (296, 295, 311, 312),
        (304, 303, 319, 320),
        (297, 296, 312, 313),
        (305, 304, 320, 321),
        (298, 297, 313, 314),
        (306, 305, 321, 322),
        (299, 298, 314, 315),
        (292, 81, 308),
        (307, 306, 322),
        (300, 299, 315, 316),
        (293, 292, 308, 309),
        (301, 300, 316, 317),
        (294, 293, 309, 310),
        (322, 321, 336, 337),
        (315, 314, 329, 330),
        (308, 81, 323),
        (307, 322, 337),
        (316, 315, 330, 331),
        (309, 308, 323, 324),
        (317, 316, 331, 332),
        (310, 309, 324, 325),
        (318, 317, 332, 333),
        (311, 310, 325, 326),
        (319, 318, 333, 334),
        (312, 311, 326, 327),
        (320, 319, 334, 335),
        (313, 312, 327, 328),
        (321, 320, 335, 336),
        (314, 313, 328, 329),
        (326, 325, 340, 341),
        (334, 333, 348, 349),
        (327, 326, 341, 342),
        (335, 334, 349, 350),
        (328, 327, 342, 343),
        (336, 335, 350, 351),
        (329, 328, 343, 344),
        (337, 336, 351, 352),
        (330, 329, 344, 345),
        (323, 81, 338),
        (307, 337, 352),
        (331, 330, 345, 346),
        (324, 323, 338, 339),
        (332, 331, 346, 347),
        (325, 324, 339, 340),
        (333, 332, 347, 348),
        (345, 344, 359, 360),
        (338, 81, 353),
        (307, 352, 367),
        (346, 345, 360, 361),
        (339, 338, 353, 354),
        (347, 346, 361, 362),
        (340, 339, 354, 355),
        (348, 347, 362, 363),
        (341, 340, 355, 356),
        (349, 348, 363, 364),
        (342, 341, 356, 357),
        (350, 349, 364, 365),
        (343, 342, 357, 358),
        (351, 350, 365, 366),
        (344, 343, 358, 359),
        (352, 351, 366, 367),
        (364, 363, 378, 379),
        (357, 356, 371, 372),
        (365, 364, 379, 380),
        (358, 357, 372, 373),
        (366, 365, 380, 381),
        (359, 358, 373, 374),
        (367, 366, 381, 382),
        (360, 359, 374, 375),
        (353, 81, 368),
        (307, 367, 382),
        (361, 360, 375, 376),
        (354, 353, 368, 369),
        (362, 361, 376, 377),
        (355, 354, 369, 370),
        (363, 362, 377, 378),
        (356, 355, 370, 371),
        (307, 382, 397),
        (376, 375, 390, 391),
        (369, 368, 383, 384),
        (377, 376, 391, 392),
        (370, 369, 384, 385),
        (378, 377, 392, 393),
        (371, 370, 385, 386),
        (379, 378, 393, 394),
        (372, 371, 386, 387),
        (380, 379, 394, 395),
        (373, 372, 387, 388),
        (381, 380, 395, 396),
        (374, 373, 388, 389),
        (382, 381, 396, 397),
        (375, 374, 389, 390),
        (368, 81, 383),
        (395, 394, 409, 410),
        (388, 387, 402, 403),
        (396, 395, 410, 411),
        (389, 388, 403, 404),
        (397, 396, 411, 412),
        (390, 389, 404, 405),
        (383, 81, 398),
        (307, 397, 412),
        (391, 390, 405, 406),
        (384, 383, 398, 399),
        (392, 391, 406, 407),
        (385, 384, 399, 400),
        (393, 392, 407, 408),
        (386, 385, 400, 401),
        (394, 393, 408, 409),
        (387, 386, 401, 402),
        (399, 398, 413, 414),
        (407, 406, 421, 422),
        (400, 399, 414, 415),
        (408, 407, 422, 423),
        (401, 400, 415, 416),
        (409, 408, 423, 424),
        (402, 401, 416, 417),
        (410, 409, 424, 425),
        (403, 402, 417, 418),
        (411, 410, 425, 426),
        (404, 403, 418, 419),
        (412, 411, 426, 427),
        (405, 404, 419, 420),
        (398, 81, 413),
        (307, 412, 427),
        (406, 405, 420, 421),
        (418, 417, 432, 433),
        (426, 425, 440, 441),
        (419, 418, 433, 434),
        (427, 426, 441, 442),
        (420, 419, 434, 435),
        (413, 81, 428),
        (307, 427, 442),
        (421, 420, 435, 436),
        (414, 413, 428, 429),
        (422, 421, 436, 437),
        (415, 414, 429, 430),
        (423, 422, 437, 438),
        (416, 415, 430, 431),
        (424, 423, 438, 439),
        (417, 416, 431, 432),
        (425, 424, 439, 440),
        (437, 436, 451, 452),
        (430, 429, 444, 445),
        (438, 437, 452, 453),
        (431, 430, 445, 446),
        (439, 438, 453, 454),
        (432, 431, 446, 447),
        (440, 439, 454, 455),
        (433, 432, 447, 448),
        (441, 440, 455, 456),
        (434, 433, 448, 449),
        (442, 441, 456, 457),
        (435, 434, 449, 450),
        (428, 81, 443),
        (307, 442, 457),
        (436, 435, 450, 451),
        (429, 428, 443, 444),
        (456, 455, 470, 471),
        (449, 448, 463, 464),
        (457, 456, 471, 472),
        (450, 449, 464, 465),
        (443, 81, 458),
        (307, 457, 472),
        (451, 450, 465, 466),
        (444, 443, 458, 459),
        (452, 451, 466, 467),
        (445, 444, 459, 460),
        (453, 452, 467, 468),
        (446, 445, 460, 461),
        (454, 453, 468, 469),
        (447, 446, 461, 462),
        (455, 454, 469, 470),
        (448, 447, 462, 463),
        (460, 459, 474, 0),
        (468, 467, 477, 5),
        (461, 460, 0, 475),
        (469, 468, 5, 478),
        (462, 461, 475, 1),
        (470, 469, 478, 479),
        (463, 462, 1, 476),
        (471, 470, 479, 480),
        (464, 463, 476, 2),
        (472, 471, 480, 481),
        (465, 464, 2, 3),
        (458, 81, 473),
        (307, 472, 481),
        (466, 465, 3, 4),
        (459, 458, 473, 474),
        (467, 466, 4, 477),
    ]
    mesh.from_pydata(vertices, [], faces)
    mesh.update()


def primitive_cylinder(mesh: bpy.types.Mesh):
    """Create a UV 16-point cylinder mesh with radius 1 and height 1 with its base at the origin."""
    mesh.clear_geometry()
    vertices = [
        (0.0, 1.0, 0.0),
        (0.0, 1.0, 1.0),
        (0.19509032368659973, 0.9807852506637573, 0.0),
        (0.19509032368659973, 0.9807852506637573, 1.0),
        (0.3826834559440613, 0.9238795042037964, 0.0),
        (0.3826834559440613, 0.9238795042037964, 1.0),
        (0.5555702447891235, 0.8314695954322815, 0.0),
        (0.5555702447891235, 0.8314695954322815, 1.0),
        (0.7071067690849304, 0.7071067690849304, 0.0),
        (0.7071067690849304, 0.7071067690849304, 1.0),
        (0.8314695954322815, 0.5555702447891235, 0.0),
        (0.8314695954322815, 0.5555702447891235, 1.0),
        (0.9238795042037964, 0.3826834559440613, 0.0),
        (0.9238795042037964, 0.3826834559440613, 1.0),
        (0.9807852506637573, 0.19509032368659973, 0.0),
        (0.9807852506637573, 0.19509032368659973, 1.0),
        (1.0, 0.0, 0.0),
        (1.0, 0.0, 1.0),
        (0.9807852506637573, -0.19509032368659973, 0.0),
        (0.9807852506637573, -0.19509032368659973, 1.0),
        (0.9238795042037964, -0.3826834559440613, 0.0),
        (0.9238795042037964, -0.3826834559440613, 1.0),
        (0.8314695954322815, -0.5555702447891235, 0.0),
        (0.8314695954322815, -0.5555702447891235, 1.0),
        (0.7071067690849304, -0.7071067690849304, 0.0),
        (0.7071067690849304, -0.7071067690849304, 1.0),
        (0.5555702447891235, -0.8314695954322815, 0.0),
        (0.5555702447891235, -0.8314695954322815, 1.0),
        (0.3826834559440613, -0.9238795042037964, 0.0),
        (0.3826834559440613, -0.9238795042037964, 1.0),
        (0.19509032368659973, -0.9807852506637573, 0.0),
        (0.19509032368659973, -0.9807852506637573, 1.0),
        (0.0, -1.0, 0.0),
        (0.0, -1.0, 1.0),
        (-0.19509032368659973, -0.9807852506637573, 0.0),
        (-0.19509032368659973, -0.9807852506637573, 1.0),
        (-0.3826834559440613, -0.9238795042037964, 0.0),
        (-0.3826834559440613, -0.9238795042037964, 1.0),
        (-0.5555702447891235, -0.8314695954322815, 0.0),
        (-0.5555702447891235, -0.8314695954322815, 1.0),
        (-0.7071067690849304, -0.7071067690849304, 0.0),
        (-0.7071067690849304, -0.7071067690849304, 1.0),
        (-0.8314695954322815, -0.5555702447891235, 0.0),
        (-0.8314695954322815, -0.5555702447891235, 1.0),
        (-0.9238795042037964, -0.3826834559440613, 0.0),
        (-0.9238795042037964, -0.3826834559440613, 1.0),
        (-0.9807852506637573, -0.19509032368659973, 0.0),
        (-0.9807852506637573, -0.19509032368659973, 1.0),
        (-1.0, 0.0, 0.0),
        (-1.0, 0.0, 1.0),
        (-0.9807852506637573, 0.19509032368659973, 0.0),
        (-0.9807852506637573, 0.19509032368659973, 1.0),
        (-0.9238795042037964, 0.3826834559440613, 0.0),
        (-0.9238795042037964, 0.3826834559440613, 1.0),
        (-0.8314695954322815, 0.5555702447891235, 0.0),
        (-0.8314695954322815, 0.5555702447891235, 1.0),
        (-0.7071067690849304, 0.7071067690849304, 0.0),
        (-0.7071067690849304, 0.7071067690849304, 1.0),
        (-0.5555702447891235, 0.8314695954322815, 0.0),
        (-0.5555702447891235, 0.8314695954322815, 1.0),
        (-0.3826834559440613, 0.9238795042037964, 0.0),
        (-0.3826834559440613, 0.9238795042037964, 1.0),
        (-0.19509032368659973, 0.9807852506637573, 0.0),
        (-0.19509032368659973, 0.9807852506637573, 1.0),
    ]

    faces = [
        (0, 1, 3, 2),
        (2, 3, 5, 4),
        (4, 5, 7, 6),
        (6, 7, 9, 8),
        (8, 9, 11, 10),
        (10, 11, 13, 12),
        (12, 13, 15, 14),
        (14, 15, 17, 16),
        (16, 17, 19, 18),
        (18, 19, 21, 20),
        (20, 21, 23, 22),
        (22, 23, 25, 24),
        (24, 25, 27, 26),
        (26, 27, 29, 28),
        (28, 29, 31, 30),
        (30, 31, 33, 32),
        (32, 33, 35, 34),
        (34, 35, 37, 36),
        (36, 37, 39, 38),
        (38, 39, 41, 40),
        (40, 41, 43, 42),
        (42, 43, 45, 44),
        (44, 45, 47, 46),
        (46, 47, 49, 48),
        (48, 49, 51, 50),
        (50, 51, 53, 52),
        (52, 53, 55, 54),
        (54, 55, 57, 56),
        (56, 57, 59, 58),
        (58, 59, 61, 60),
        (3, 1, 63, 61),
        (60, 61, 63, 62),
        (62, 63, 1, 0),
        (0, 2, 4, 6),
    ]

    mesh.from_pydata(vertices, [], faces)
    mesh.update()


def primitive_rect(mesh: bpy.types.Mesh):
    """Create a primitive 2D unit rect."""
    mesh.clear_geometry()
    vertices = [
        (-1.0, -1.0, 0.0),
        (1.0, -1.0, 0.0),
        (-1.0, 1.0, 0.0),
        (1.0, 1.0, 0.0),
    ]
    edges = [
        (2, 0),
        (0, 1),
        (1, 3),
        (3, 2),
    ]
    # No face.
    mesh.from_pydata(vertices, edges, [])
    mesh.update()


def primitive_cube(mesh: bpy.types.Mesh):
    """Create a cube mesh with side length 1, with its base at the origin."""
    mesh.clear_geometry()
    vertices = [
        (-0.5, -0.5, 0.0),
        (-0.5, 0.5, 0.0),
        (0.5, 0.5, 0.0),
        (0.5, -0.5, 0.0),
        (-0.5, -0.5, 1.0),
        (-0.5, 0.5, 1.0),
        (0.5, 0.5, 1.0),
        (0.5, -0.5, 1.0),
    ]
    faces = [
        (0, 1, 2, 3),
        (4, 5, 6, 7),
        (0, 1, 5, 4),
        (2, 3, 7, 6),
        (0, 3, 7, 4),
        (1, 2, 6, 5),
    ]
    mesh.from_pydata(vertices, [], faces)
    mesh.update()


def primitive_three_axes(mesh: bpy.types.Mesh):
    """Create a mesh with three prismic axes of length 1 to represent the transform at a point."""
    mesh.clear_geometry()
    vertices = [
        (-0.1, -0.1, -0.1),
        (-0.1, 0.1, -0.1),
        (0.1, 0.1, -0.1),
        (0.1, -0.1, -0.1),
        (-0.1, -0.1, 0.1),
        (-0.1, 0.1, 0.1),
        (0.1, 0.1, 0.1),
        (0.1, -0.1, 0.1),
        (-0.1, -0.1, 0.9),
        (0.1, -0.1, 0.9),
        (-0.1, 0.1, 0.9),
        (0.1, 0.1, 0.9),
        (-0.1, 0.9, -0.1),
        (0.1, 0.9, -0.1),
        (-0.1, 0.9, 0.1),
        (0.1, 0.9, 0.1),
        (0.9, 0.1, -0.1),
        (0.9, -0.1, -0.1),
        (0.9, 0.1, 0.1),
        (0.9, -0.1, 0.1),
    ]
    # Not all four-sided.
    faces = [
        (6, 7, 9, 11),
        (7, 6, 18, 19),
        (2, 6, 15, 13),
        (8, 10, 11, 9),
        (0, 3, 17, 19, 7, 9, 8, 4),
        (5, 6, 11, 10),
        (0, 1, 12, 13, 2, 16, 17, 3),
        (12, 13, 15, 14),
        (6, 5, 14, 15),
        (16, 17, 19, 18),
        (6, 2, 16, 18),
        (0, 1, 12, 14, 5, 10, 8, 4),
    ]
    mesh.from_pydata(vertices, [], faces)
    mesh.update()


def create_region_scale_driver(obj: bpy.types.Object, prop_axes: str):
    """Create a driver that uses MSB_REGION `prop_axes` (e.g. 'xxz') to drive the matching index of `obj.scale`."""
    if len(prop_axes) > 3:
        raise ValueError("prop_axes must be a string of length 3 or less.")
    for i, ax in enumerate(prop_axes):
        driver = obj.driver_add("scale", i).driver
        driver.type = "SCRIPTED"
        driver.expression = "msb_region_scale"
        var = driver.variables.new()
        var.name = "msb_region_scale"
        var.type = "SINGLE_PROP"
        var.targets[0].id_type = "OBJECT"
        var.targets[0].id = obj
        var.targets[0].data_path = f"MSB_REGION.shape_{ax}"
